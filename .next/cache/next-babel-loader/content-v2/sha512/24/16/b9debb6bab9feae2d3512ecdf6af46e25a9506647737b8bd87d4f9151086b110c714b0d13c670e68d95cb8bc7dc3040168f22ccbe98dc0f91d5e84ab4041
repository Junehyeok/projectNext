{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst name = ({\n  user,\n  time\n}) => {\n  const username = user && user.name;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [username, time]\n  }, void 0, true);\n};\n\nexport const getStaticProps = async ({\n  params\n}) => {\n  try {\n    const res = await fetch(`https://api.github.com/users/${params.name}`);\n    const user = await res.json();\n\n    if (res.status === 200) {\n      const user = await res.json();\n      return {\n        props: {\n          user,\n          time: new Date().toISOString()\n        }\n      };\n    }\n\n    return {\n      props: {\n        time: new Date().toISOString()\n      }\n    };\n  } catch (error) {\n    console.log(error);\n    return {\n      props: {\n        time: new Date().toISOString()\n      }\n    };\n  }\n};\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        name: \"Junehyeok\"\n      }\n    }],\n    fallback: true\n  };\n}\nexport default name;","map":{"version":3,"sources":["C:/dev/next/nextProject2/projectNext/pages/static/[name].jsx"],"names":["fetch","name","user","time","username","getStaticProps","params","res","json","status","props","Date","toISOString","error","console","log","getStaticPaths","paths","fallback"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAC7B,QAAMC,QAAQ,GAAGF,IAAI,IAAIA,IAAI,CAACD,IAA9B;AACA,sBACI;AAAA,eACKG,QADL,EAEKD,IAFL;AAAA,kBADJ;AAMH,CARD;;AAUA,OAAO,MAAME,cAAc,GAAG,OAAM;AAAEC,EAAAA;AAAF,CAAN,KAAqB;AAC/C,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMP,KAAK,CAAE,gCAA+BM,MAAM,CAACL,IAAK,EAA7C,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMK,GAAG,CAACC,IAAJ,EAAnB;;AACA,QAAGD,GAAG,CAACE,MAAJ,KAAe,GAAlB,EAAuB;AACnB,YAAMP,IAAI,GAAG,MAAMK,GAAG,CAACC,IAAJ,EAAnB;AACA,aAAO;AAAEE,QAAAA,KAAK,EAAE;AAACR,UAAAA,IAAD;AAAOC,UAAAA,IAAI,EAAG,IAAIQ,IAAJ,GAAWC,WAAX;AAAd;AAAT,OAAP;AACH;;AACD,WAAO;AAACF,MAAAA,KAAK,EAAE;AAAEP,QAAAA,IAAI,EAAG,IAAIQ,IAAJ,GAAWC,WAAX;AAAT;AAAR,KAAP;AACH,GARD,CAQE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAO;AAACH,MAAAA,KAAK,EAAE;AAAEP,QAAAA,IAAI,EAAG,IAAIQ,IAAJ,GAAWC,WAAX;AAAT;AAAR,KAAP;AACH;AACJ,CAbM;AAeP,OAAO,eAAeI,cAAf,GAAgC;AACnC,SAAO;AACHC,IAAAA,KAAK,EAAE,CAAC;AAACX,MAAAA,MAAM,EAAG;AAACL,QAAAA,IAAI,EAAE;AAAP;AAAV,KAAD,CADJ;AAEHiB,IAAAA,QAAQ,EAAG;AAFR,GAAP;AAIH;AAED,eAAejB,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\r\n\r\nconst name = ({ user, time }) => {\r\n    const username = user && user.name;\r\n    return(\r\n        <>\r\n            {username}\r\n            {time}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getStaticProps = async({ params }) => {\r\n    try {\r\n        const res = await fetch(`https://api.github.com/users/${params.name}`);\r\n        const user = await res.json();\r\n        if(res.status === 200) {\r\n            const user = await res.json();\r\n            return { props: {user, time : new Date().toISOString() } };\r\n        }\r\n        return {props: { time : new Date().toISOString() } };\r\n    } catch (error) {  \r\n        console.log(error);\r\n        return {props: { time : new Date().toISOString() } };\r\n    }\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [{params : {name: \"Junehyeok\" } }],\r\n        fallback : true,\r\n    }\r\n}\r\n\r\nexport default name;"]},"metadata":{},"sourceType":"module"}