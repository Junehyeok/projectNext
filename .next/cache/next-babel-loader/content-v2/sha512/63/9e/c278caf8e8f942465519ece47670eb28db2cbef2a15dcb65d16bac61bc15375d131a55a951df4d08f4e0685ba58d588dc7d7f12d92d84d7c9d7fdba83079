{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar name = function name(_ref) {\n  var user = _ref.user,\n      time = _ref.time;\n  var username = user && user.name;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [username, time]\n  }, void 0, true);\n};\n\nexport var __N_SSG = true;\nexport default name;","map":{"version":3,"sources":["C:/dev/next/nextProject2/projectNext/pages/static/[name].jsx"],"names":["name","user","time","username"],"mappings":";;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAoB;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7B,MAAMC,QAAQ,GAAGF,IAAI,IAAIA,IAAI,CAACD,IAA9B;AACA,sBACI;AAAA,eACKG,QADL,EAEKD,IAFL;AAAA,kBADJ;AAMH,CARD;;;AAgCA,eAAeF,IAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\r\n\r\nconst name = ({ user, time }) => {\r\n    const username = user && user.name;\r\n    return(\r\n        <>\r\n            {username}\r\n            {time}\r\n        </>\r\n    )\r\n}\r\n\r\nexport const getStaticProps = async({ params }) => {\r\n    try {\r\n        const res = await fetch(`https://api.github.com/users/${params.name}`);\r\n        const user = await res.json();\r\n        if(res.status === 200) {\r\n            const user = await res.json();\r\n            return { props: {user, time : new Date().toISOString() } };\r\n        }\r\n        return {props: { time : new Date().toISOString() } };\r\n    } catch (error) {  \r\n        console.log(error);\r\n        return {props: { time : new Date().toISOString() } };\r\n    }\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n    return {\r\n        paths: [{params : {name: \"Junehyeok\" } }],\r\n        fallback : true,\r\n    }\r\n}\r\n\r\nexport default name;"]},"metadata":{},"sourceType":"module"}